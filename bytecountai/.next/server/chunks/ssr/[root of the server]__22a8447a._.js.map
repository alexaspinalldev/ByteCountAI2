{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///Users/Alex/Documents/VSCode/bytecountai/bytecountai/src/app/components/input.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { POST } from \"../ai/route\";\nimport { Fooditem } from \"../ai/route\";\n\nexport default function Input() {\n    const [foodString, setFoodString] = useState(\"\");\n    const [mealPad, setMealPad] = useState<Fooditem[]>([]);\n\n    // * Build the mealPad from local storage\n    useEffect(() => {\n        const mealPad = JSON.parse(localStorage.getItem(\"mealPad\") as string);\n        if (mealPad === null) {\n            setMealPad([]);\n        } else {\n            setMealPad(mealPad);\n        }\n    }, []);\n    // [] is the dependency array. If you want to run the effect only once, you can pass an empty array [] as the second argument.\n\n    // * Calculate total calories\n    const total = mealPad.reduce((acc, item) => acc + item.calories, 0);\n\n    // * Send an item to the AI to test\n    async function testInput(event: React.MouseEvent<HTMLButtonElement>) {\n        const inputElement = document.getElementById(\"foodInput\") as HTMLInputElement | null;\n        const inputValue: string = inputElement!.value;\n        setFoodString(inputValue);\n\n        // Fetch the response from the POST function\n        const queryResponse: Fooditem = await POST(inputValue);\n        if (queryResponse === \"{ false }\") {\n            console.log(`The supplied item is not food.`);\n            return;\n        }\n\n        // ? Handle content errors here perhaps\n\n        // Update the mealPad state with the new food item\n        const mealPadWithNewItem = [...mealPad, queryResponse];\n        setMealPadAndSync(mealPadWithNewItem);\n    }\n\n    // * Edit item in the mealPad\n    // Make the item editable on click\n    async function editItem(event: React.MouseEvent<HTMLDivElement>, index: number) {\n        // Prevent the click event from bubbling up to the li element\n        event.stopPropagation();\n        const div = event.target as HTMLLIElement;\n        let oldValue = div.textContent;\n        div.contentEditable = \"true\";\n        div.focus();\n\n        // Blur event to save the edited item\n        const handleBlur = () => {\n            if (div.textContent === \"\") {\n                div.textContent = oldValue;\n                return\n            }\n            else if (div.textContent === oldValue) {\n                return\n            } else {\n                // Show warning if the user tries to enter a non-numeric value for calories\n                if (div.id === \"foodCal\" && isNaN(parseInt(div.textContent!))) {\n                    alert(\"Calories must be a number\");\n                    div.textContent = oldValue;\n                    return\n                }\n                // Save the edited item\n                const newValue = div.textContent;\n                div.contentEditable = \"false\";\n\n                let newItem = { ...mealPad[index] };\n\n                // switch case for whether its the label or the calories we're editing\n                if (div.id === \"foodName\") {\n                    newItem = { ...mealPad[index], label: newValue! };\n                } else if (div.id === \"foodCal\") {\n                    newItem = { ...mealPad[index], calories: parseInt(newValue!), specificity: -1 };\n                }\n\n                // Replace the item at the index with the new item\n                const mealPadWithEditedItem = [...mealPad];\n                mealPadWithEditedItem.splice(index, 1, newItem);\n                setMealPadAndSync(mealPadWithEditedItem);\n            };\n            // Remove the blur event listener to prevent memory leaks\n            div.removeEventListener(\"blur\", handleBlur);\n\n        };\n        // Add the blur event listener to the div\n        div.addEventListener(\"blur\", handleBlur);\n    }\n\n\n    // * Clear entire mealPad\n    async function clearMealPad() {\n        alert(\"Are you sure you want to clear all items?\");\n        setMealPadAndSync([]);\n    }\n\n\n    // * Delete items from mealPad\n    async function removeItem(itemId: number, prevMealPad: Fooditem[] = mealPad) {\n        setMealPadAndSync(prevMealPad.filter((_: Fooditem, index: number) => index !== itemId))\n    }\n\n    // * Update the mealPad state and sync with local storage\n    function setMealPadAndSync(mealPad: Fooditem[]) {\n        setMealPad(mealPad);\n        localStorage.setItem(\"mealPad\", JSON.stringify(mealPad));\n    }\n\n    // TODO: Post to day of eating/DB\n    // Assemble the mealpad contents into a single object including the UID of the user, the Meal label, the date and the mealpad array\n    // Post this to my server component\n    // setMealPadAndSync([]]);\n    // The server component will then post this to the DB\n    // If the DB post fails, return the mealPad, local storage and DOM to its previous state\n\n\n    return (\n        <div className=\"flex flex-col w-full md:w-1/2\">\n            <input className=\"w-4/5 bg-gray-200 rounded-2xl\"\n                type=\"text\"\n                id=\"foodInput\"\n            />\n            <div className=\"flex\">\n                <button className=\"w-1/2\" onClick={testInput}>Add</button>\n                <button className=\"w-1/2\" onClick={clearMealPad}>Clear all</button>\n            </div>\n            <ul id=\"mealPadUl\">\n                {mealPad.map((item, index) => (\n                    <li key={index} className=\"flex justify-between\">\n                        <div className=\"flex justify-between grow\">\n                            <div onClick={(event) => editItem(event, index)} plaintext-only=\"true\" id=\"foodName\" className=\"grow\">{item.label}</div>\n                            <div className=\"flex\">\n                                <div onClick={(event) => editItem(event, index)} plaintext-only=\"true\" id=\"foodCal\">{item.calories}</div>\n                                <div>kcal</div>\n                            </div>\n                        </div>\n                        <div className=\"relative group\">\n                            <div className={item.specificity === -1 ? \"hidden\" :\n                                item.specificity <= 0.4 ? \"text-red-500\" :\n                                    item.specificity > 0.4 && item.specificity <= 0.7 ? \"text-yellow-500\" :\n                                        \"text-green-500\"}>\n                                <svg height={32} width={32} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g strokeWidth=\"0\"></g><g strokeLinecap=\"round\" strokeLinejoin=\"round\"></g><g> <path d=\"M12 9.5C13.3807 9.5 14.5 10.6193 14.5 12C14.5 13.3807 13.3807 14.5 12 14.5C10.6193 14.5 9.5 13.3807 9.5 12C9.5 10.6193 10.6193 9.5 12 9.5Z\" fill=\"currentColor\"></path> </g></svg>\n                            </div>\n                            <div className=\"absolute w-[200px] hidden p-1 text-center bg-gray-400 rounded-full text-md top-2 group-hover:block\">{item.specificity < 0.4 ? \"Item specificity only \" + item.specificity + \" - can you narrow it down?\" : \"Item specificity: \" + item.specificity}\n                            </div>\n                        </div>\n                        <button onClick={() => removeItem(index)}>Remove</button>\n                    </li>\n                ))\n                }\n            </ul >\n            <div className=\"flex justify-between\">\n                <button>Commit to day</button>\n                <div>Total:{total}</div>\n            </div>\n        </div >\n    );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file:///Users/Alex/Documents/VSCode/bytecountai/bytecountai/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":["file:///Users/Alex/Documents/VSCode/bytecountai/bytecountai/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///Users/Alex/Documents/VSCode/bytecountai/bytecountai/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0],"debugId":null}}]
}